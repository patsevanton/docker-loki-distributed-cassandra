version: '3.8'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

services:
  cassandra:
    image: bitnami/cassandra:3.11.11
    container_name: cassandra
    restart: always
    ports:
      - "9042:9042"
    volumes:
      - cassandra:/bitnami
    healthcheck:
      test: [ "CMD", "cqlsh", "-u", "cassandra", "-p", "cassandra", "-e", "SELECT table_name FROM system_schema.tables WHERE keyspace_name='loki';" ]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      CASSANDRA_USER: cassandra
      CASSANDRA_PASSWORD: cassandra
      CASSANDRA_CLUSTER_NAME: loki
      CASSANDRA_DATACENTER: dc1
    networks:
      - lokidemo
    logging: *default-logging

  redis:
    image: bitnami/redis:6.0
    container_name: redis
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - 6379
    networks:
      - lokidemo
    logging: *default-logging

  consul:
    container_name: consul
    restart: always
    image: consul:1.9
    command: agent -log-level=info -dev -client 0.0.0.0
    volumes:
      - consul-config:/consul/config
      - consul-data:/consul/data
    ports:
      - 8500:8500
    networks:
      - lokidemo
    logging: *default-logging

  loki-distributor:
    image: grafana/loki:2.4.2
    container_name: loki-distributor
    restart: always
    ports:
      - 3101:3100
    depends_on:
      redis:
        condition: service_started
      consul:
        condition: service_started
      cassandra:
        condition: service_healthy
    volumes:
      - ./consul_config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=distributor
    networks:
      - lokidemo
    logging: *default-logging

  loki-querier:
    image: grafana/loki:2.4.2
    container_name: loki-querier
    restart: always
    ports:
      - 3100
    depends_on:
      redis:
        condition: service_started
      consul:
        condition: service_started
      cassandra:
        condition: service_healthy
    volumes:
      - ./consul_config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=querier
    networks:
      - lokidemo
    logging: *default-logging

  loki-ingester:
    image: grafana/loki:2.4.2
    container_name: loki-ingester
    restart: always
    ports:
      - 3100
    depends_on:
      redis:
        condition: service_started
      consul:
        condition: service_started
      cassandra:
        condition: service_healthy
    volumes:
      - ./consul_config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=ingester
    networks:
      - lokidemo
    logging: *default-logging

  loki-table-manager:
    image: grafana/loki:2.4.2
    container_name: loki-table-manager
    restart: always
    ports:
      - 3100
    depends_on:
      redis:
        condition: service_started
      consul:
        condition: service_started
      cassandra:
        condition: service_healthy
    volumes:
      - ./consul_config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=table-manager
    networks:
      - lokidemo
    logging: *default-logging

  nginx-app:
    image: nginx
    container_name: nginx-app
    restart: always
    ports:
      - 8084:80
    networks:
      - lokidemo
    depends_on:
      - loki-distributor
    logging: *default-logging

  flask-app:
    image: flask-app
    container_name: flask-app
    build: ./flask-app
    restart: always
    ports:
      - 5000:5000
    logging: *default-logging

  promtail:
    image:  grafana/promtail:2.4.2
    container_name: promtail
    restart: always
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./docker-config.yaml:/etc/promtail/docker-config.yaml
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      flask-app:
        condition: service_started
      loki-ingester:
        condition: service_started
    networks:
      - lokidemo
    logging: *default-logging

  grafana:
    image: grafana/grafana:8.4.5
    container_name: grafana
    restart: always
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_USERS_DEFAULT_THEME=light
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=critical
    ports:
      - "3000:3000"
    networks:
      - lokidemo
    depends_on:
      loki-ingester:
        condition: service_started
    volumes:
      - ./datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - grafana:/var/lib/grafana
    logging: *default-logging

volumes:
  grafana: {}
  consul-config: {}
  consul-data: {}
  cassandra: {}

networks:
  lokidemo:
    name: lokidemo
