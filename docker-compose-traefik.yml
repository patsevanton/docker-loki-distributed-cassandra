version: '3.8'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

services:
  traefik:
    image: traefik:v2.6.3
    container_name: traefik
    command:
      - "--log.level=INFO"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - lokidemo
    logging: *default-logging

  redis:
    image: bitnami/redis:latest
    container_name: redis
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - 6379
    networks:
      - lokidemo
    logging: *default-logging

  etcd-1:
    container_name: etcd1
    image: quay.io/coreos/etcd:latest
    entrypoint: /usr/local/bin/etcd
    command:
      - '--name=etcd-1'
      - '--initial-advertise-peer-urls=http://etcd-1:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd-1:2379'
      - '--initial-cluster-token=w5rBg1ofcgvvinJEc8s07fS4'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster=etcd-1=http://etcd-1:2380,etcd-2=http://etcd-2:2380,etcd-3=http://etcd-3:2380'
      - '--initial-cluster-state=new'
    ports:
      - 2379
    volumes:
      - etcd1:/etcd_data
    networks:
      - lokidemo
    logging: *default-logging

  etcd-2:
    container_name: etcd2
    image: quay.io/coreos/etcd:latest
    entrypoint: /usr/local/bin/etcd
    command:
      - '--name=etcd-2'
      - '--initial-advertise-peer-urls=http://etcd-2:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd-2:2379'
      - '--initial-cluster-token=w5rBg1ofcgvvinJEc8s07fS4'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster=etcd-1=http://etcd-1:2380,etcd-2=http://etcd-2:2380,etcd-3=http://etcd-3:2380'
      - '--initial-cluster-state=new'
    ports:
      - 2379
    volumes:
      - etcd2:/etcd_data
    networks:
      - lokidemo
    logging: *default-logging

  etcd-3:
    container_name: etcd3
    image: quay.io/coreos/etcd:latest
    entrypoint: /usr/local/bin/etcd
    command:
      - '--name=etcd-3'
      - '--initial-advertise-peer-urls=http://etcd-3:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd-3:2379'
      - '--initial-cluster-token=w5rBg1ofcgvvinJEc8s07fS4'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster=etcd-1=http://etcd-1:2380,etcd-2=http://etcd-2:2380,etcd-3=http://etcd-3:2380'
      - '--initial-cluster-state=new'
    ports:
      - 2379
    volumes:
      - etcd3:/etcd_data
    networks:
      - lokidemo
    logging: *default-logging

  minio:
    image: minio/minio:RELEASE.2022-03-11T23-57-45Z
    container_name: minio
    entrypoint: sh
    command: -c 'mkdir -p /export/loki && minio server /export'
    environment:
      - MINIO_ROOT_USER=697d0993dd097f38d5b8
      - MINIO_ROOT_PASSWORD=9f88738761b57c63f6a81bdfd471
    networks:
      - lokidemo
    volumes:
      - minio:/export
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.127.0.0.1.nip.io`)"
      - "traefik.http.routers.minio.entrypoints=web"
    logging: *default-logging

  loki-distributor:
    image: grafana/loki:2.4.2
    container_name: loki-distributor
    ports:
      - 3101:3100
    depends_on:
      - minio
      - redis
      - etcd-1
      - etcd-2
      - etcd-3
    volumes:
      - ./configs/loki/config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=distributor
    networks:
      - lokidemo
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.distributors.loadbalancer.server.port=3100"
      - "traefik.http.services.distributors.loadbalancer.healthcheck.path=/ready"
      - "traefik.http.routers.distributors.rule=Host(`distributors`)"
      - "traefik.http.routers.distributors.entrypoints=web"
    logging: *default-logging

  loki-querier:
    image: grafana/loki:2.4.2
    container_name: loki-querier
    ports:
      - 3100
    depends_on:
      - minio
      - redis
      - etcd-1
      - etcd-2
      - etcd-3
    volumes:
      - ./configs/loki/config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=querier
    networks:
      - lokidemo
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.queriers.loadbalancer.server.port=3100"
      - "traefik.http.services.queriers.loadbalancer.healthcheck.path=/ready"
      - "traefik.http.routers.queriers.rule=Host(`queriers`)"
      - "traefik.http.routers.queriers.entrypoints=web"
    logging: *default-logging

  loki-ingester:
    image: grafana/loki:2.4.2
    container_name: loki-ingester
    ports:
      - 3100
    depends_on:
      - minio
      - redis
      - etcd-1
      - etcd-2
      - etcd-3
    volumes:
      - ./configs/loki/config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=ingester
    networks:
      - lokidemo
    logging: *default-logging

  loki-table-manager:
    image: grafana/loki:2.4.2
    container_name: loki-table-manager
    ports:
      - 3100
    depends_on:
      - minio
      - redis
      - etcd-1
      - etcd-2
      - etcd-3
    volumes:
      - ./configs/loki/config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=table-manager
    networks:
      - lokidemo
    logging: *default-logging

  nginx-app:
    image: nginx
    container_name: nginx-app
    networks:
      - lokidemo
    depends_on:
      - loki-distributor
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`nginx.127.0.0.1.nip.io`)"
      - "traefik.http.routers.nginx.entrypoints=web"
    logging: *default-logging

  flask-app:
    image: flask-app
    container_name: flask-app
    build: ./flask-app
    restart: unless-stopped
    ports:
      - 5000:5000
    networks:
      - lokidemo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flask.rule=Host(`flask.127.0.0.1.nip.io`)"
      - "traefik.http.services.flask-service.loadbalancer.server.port=5000"
      - "traefik.http.routers.flask.entrypoints=web"
    logging: *default-logging

  promtail:
    image:  grafana/promtail:2.4.2
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./configs/promtail/docker-config.yaml:/etc/promtail/docker-config.yaml
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki-ingester
    networks:
      - lokidemo
    logging: *default-logging

  grafana:
    image: grafana/grafana:8.4.4
    container_name: grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_USERS_DEFAULT_THEME=light
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=critical
    networks:
      - lokidemo
    depends_on:
      - loki-ingester
      - minio
    volumes:
      - ./configs/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - grafana:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.127.0.0.1.nip.io`)"
      - "traefik.http.routers.grafana.entrypoints=web"
    logging: *default-logging

volumes:
  etcd1: {}
  etcd2: {}
  etcd3: {}
  minio: {}
  grafana: {}

networks:
  lokidemo: {}
