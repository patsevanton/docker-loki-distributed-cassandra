version: '3.8'

services:
  traefik:
    image: traefik:v2.0
    command:
      - "--log.level=INFO"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - lokidemo

  redis:
    image: bitnami/redis:latest
    container_name: redis
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - 6379
    networks:
      - lokidemo

  etcd-1:
    container_name: etcd1
    image: quay.io/coreos/etcd:latest
    entrypoint: /usr/local/bin/etcd
    command:
      - '--name=etcd-1'
      - '--initial-advertise-peer-urls=http://etcd-1:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd-1:2379'
      - '--initial-cluster-token=w5rBg1ofcgvvinJEc8s07fS4'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster=etcd-1=http://etcd-1:2380,etcd-2=http://etcd-2:2380,etcd-3=http://etcd-3:2380'
      - '--initial-cluster-state=new'
    ports:
      - 2379
    volumes:
      - etcd1:/etcd_data
    networks:
      - lokidemo

  etcd-2:
    container_name: etcd2
    image: quay.io/coreos/etcd:latest
    entrypoint: /usr/local/bin/etcd
    command:
      - '--name=etcd-2'
      - '--initial-advertise-peer-urls=http://etcd-2:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd-2:2379'
      - '--initial-cluster-token=w5rBg1ofcgvvinJEc8s07fS4'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster=etcd-1=http://etcd-1:2380,etcd-2=http://etcd-2:2380,etcd-3=http://etcd-3:2380'
      - '--initial-cluster-state=new'
    ports:
      - 2379
    volumes:
      - etcd2:/etcd_data
    networks:
      - lokidemo

  etcd-3:
    container_name: etcd3
    image: quay.io/coreos/etcd:latest
    entrypoint: /usr/local/bin/etcd
    command:
      - '--name=etcd-3'
      - '--initial-advertise-peer-urls=http://etcd-3:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd-3:2379'
      - '--initial-cluster-token=w5rBg1ofcgvvinJEc8s07fS4'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster=etcd-1=http://etcd-1:2380,etcd-2=http://etcd-2:2380,etcd-3=http://etcd-3:2380'
      - '--initial-cluster-state=new'
    ports:
      - 2379
    volumes:
      - etcd3:/etcd_data
    networks:
      - lokidemo

  minio:
    image: minio/minio:latest
    container_name: minio
    entrypoint: sh
    command: -c 'mkdir -p /export/loki && /usr/bin/minio server /export'
    environment:
      - MINIO_ACCESS_KEY=697d0993dd097f38d5b8
      - MINIO_SECRET_KEY=9f88738761b57c63f6a81bdfd471
    networks:
      - lokidemo
    volumes:
      - minio:/export
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3101/loki/api/v1/push
        loki-external-labels: job=dockerlogs,environment=development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.127.0.0.1.nip.io`)"
      - "traefik.http.routers.minio.entrypoints=web"

  loki-distributor:
    image: grafana/loki:2.1.0
    container_name: loki-distributor
    ports:
      - 3101:3100
    depends_on:
      - minio
      - redis
      - etcd-1
      - etcd-2
      - etcd-3
    volumes:
      - ./configs/loki/config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=distributor
    networks:
      - lokidemo
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.distributors.loadbalancer.server.port=3100"
      - "traefik.http.services.distributors.loadbalancer.healthcheck.path=/ready"
      - "traefik.http.routers.distributors.rule=Host(`distributors`)"
      - "traefik.http.routers.distributors.entrypoints=web"

  loki-querier:
    image: grafana/loki:2.1.0
    container_name: loki-querier
    ports:
      - 3100
    depends_on:
      - minio
      - redis
      - etcd-1
      - etcd-2
      - etcd-3
    volumes:
      - ./configs/loki/config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=querier
    networks:
      - lokidemo
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3101/loki/api/v1/push
        loki-external-labels: job=dockerlogs,owner=ruan,environment=development
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.queriers.loadbalancer.server.port=3100"
      - "traefik.http.services.queriers.loadbalancer.healthcheck.path=/ready"
      - "traefik.http.routers.queriers.rule=Host(`queriers`)"
      - "traefik.http.routers.queriers.entrypoints=web"

  loki-ingester:
    image: grafana/loki:2.1.0
    container_name: loki-ingester
    ports:
      - 3100
    depends_on:
      - minio
      - redis
      - etcd-1
      - etcd-2
      - etcd-3
    volumes:
      - ./configs/loki/config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=ingester
    networks:
      - lokidemo

  loki-table-manager:
    image: grafana/loki:2.1.0
    container_name: loki-table-manager
    ports:
      - 3100
    depends_on:
      - minio
      - redis
      - etcd-1
      - etcd-2
      - etcd-3
    volumes:
      - ./configs/loki/config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=table-manager
    networks:
      - lokidemo

  nginx-app:
    image: nginx
    container_name: nginx-app
    networks:
      - lokidemo
    depends_on:
      - loki-distributor
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3101/loki/api/v1/push
        loki-external-labels: job=dockerlogs,environment=development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`nginx.127.0.0.1.nip.io`)"
      - "traefik.http.routers.nginx.entrypoints=web"

  cat-facts-app:
    image: alpine
    container_name: cat-facts-app
    environment:
      - SLEEP_INTERVAL=30
      - ANIMAL=cat
      - PROJECT_SOURCE=https://github.com/alexwohlbruck/cat-facts
    volumes:
      - logsvol:/var/log/catfacts
    entrypoint: |
      sh -c 'sh -s << EOF
      apk add --no-cache curl
      rm -rf /var/log/catfacts
      mkdir -p /var/log/catfacts
      while true
        do
          sleep $$SLEEP_INTERVAL
          curl -s -w "\n" "https://cat-fact.herokuapp.com/facts/random?animal_type=$$ANIMAL&amount=1" >> /var/log/catfacts/facts.json
        done
      EOF'

  promtail:
    image:  grafana/promtail:latest
    container_name: promtail
    volumes:
      - logsvol:/var/log/catfacts
      - ./configs/promtail/promtail-config.yaml:/etc/promtail/docker-config.yaml
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - cat-facts-app
      - loki-ingester
    networks:
      - lokidemo

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - lokidemo
    depends_on:
      - loki-ingester
      - minio
    volumes:
      - ./configs/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - grafana:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.127.0.0.1.nip.io`)"
      - "traefik.http.routers.grafana.entrypoints=web"

volumes:
  etcd1: {}
  etcd2: {}
  etcd3: {}
  minio: {}
  grafana: {}
  logsvol: {}

networks:
  lokidemo: {}
