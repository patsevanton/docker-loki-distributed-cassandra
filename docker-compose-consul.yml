version: '3.8'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

services:
  redis:
    image: bitnami/redis:6.0
    container_name: redis
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - 6379
    networks:
      - lokidemo
    logging: *default-logging

  consul:
    container_name: consul
    image: consul:1.9
    command: agent -log-level=info -dev -client 0.0.0.0
    volumes:
      - consul-config:/consul/config
      - consul-data:/consul/data
    ports:
      - 8500:8500
    networks:
      - lokidemo
    logging: *default-logging

  minio:
    image: minio/minio:RELEASE.2022-03-11T23-57-45Z
    container_name: minio
    entrypoint: sh
    command: -c 'mkdir -p /export/loki && minio server /export'
    environment:
      - MINIO_ROOT_USER=697d0993dd097f38d5b8
      - MINIO_ROOT_PASSWORD=9f88738761b57c63f6a81bdfd471
    ports:
      - 9000:9000
    networks:
      - lokidemo
    volumes:
      - minio:/export
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    logging: *default-logging

  loki-distributor:
    image: grafana/loki:2.4.2
    container_name: loki-distributor
    ports:
      - 3101:3100
    depends_on:
      - minio
      - redis
      - consul
    volumes:
      - ./configs/loki/consul_config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=distributor
    networks:
      - lokidemo
    logging: *default-logging

  loki-querier:
    image: grafana/loki:2.4.2
    container_name: loki-querier
    ports:
      - 3100
    depends_on:
      - minio
      - redis
      - consul
    volumes:
      - ./configs/loki/consul_config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=querier
    networks:
      - lokidemo
    logging: *default-logging

  loki-ingester:
    image: grafana/loki:2.4.2
    container_name: loki-ingester
    ports:
      - 3100
    depends_on:
      - minio
      - redis
      - consul
    volumes:
      - ./configs/loki/consul_config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=ingester
    networks:
      - lokidemo
    logging: *default-logging

  loki-table-manager:
    image: grafana/loki:2.4.2
    container_name: loki-table-manager
    ports:
      - 3100
    depends_on:
      - minio
      - redis
      - consul
    volumes:
      - ./configs/loki/consul_config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml -target=table-manager
    networks:
      - lokidemo
    logging: *default-logging

  nginx-app:
    image: nginx
    container_name: nginx-app
    restart: unless-stopped
    ports:
      - 8084:80
    networks:
      - lokidemo
    depends_on:
      - loki-distributor
    logging: *default-logging

  flask-app:
    image: flask-app
    container_name: flask-app
    build: ./flask-app
    restart: unless-stopped
    ports:
      - 5000:5000
    logging: *default-logging

  promtail:
    image:  grafana/promtail:2.4.2
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./configs/promtail/docker-config.yaml:/etc/promtail/docker-config.yaml
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - flask-app
      - loki-ingester
    networks:
      - lokidemo
    logging: *default-logging

  grafana:
    image: grafana/grafana:8.4.5
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - lokidemo
    depends_on:
      - loki-ingester
      - minio
    volumes:
      - ./configs/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - grafana:/var/lib/grafana
    logging: *default-logging

volumes:
  minio: {}
  grafana: {}
  consul-config: {}
  consul-data: {}

networks:
  lokidemo: 
    name: lokidemo
